/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestMargin, TestMarginInterface } from "../TestMargin";

const _abi = [
  {
    inputs: [],
    name: "margin",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "balanceRisky",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "balanceStable",
            type: "uint128",
          },
        ],
        internalType: "struct Margin.Data",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "margins",
    outputs: [
      {
        internalType: "uint128",
        name: "balanceRisky",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "balanceStable",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "delRisky",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "delStable",
        type: "uint256",
      },
    ],
    name: "shouldDeposit",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "balanceRisky",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "balanceStable",
            type: "uint128",
          },
        ],
        internalType: "struct Margin.Data",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "delRisky",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "delStable",
        type: "uint256",
      },
    ],
    name: "shouldWithdraw",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "balanceRisky",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "balanceStable",
            type: "uint128",
          },
        ],
        internalType: "struct Margin.Data",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506105b8806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631aac89e61461005157806338820465146100905780638f76691a146100e4578063d6e79d861461012b575b600080fd5b61006461005f3660046104db565b61013e565b6040805182516001600160801b0390811682526020938401511692810192909252015b60405180910390f35b6100c461009e3660046104a5565b6000602081905290815260409020546001600160801b0380821691600160801b90041682565b604080516001600160801b03938416815292909116602083015201610087565b604080518082018252600080825260209182018190523381528082528290208251808401909352546001600160801b038082168452600160801b9091041690820152610064565b6100646101393660046104db565b610279565b6040805180820190915260008082526020820152336000908152602081905260408120546001600160801b0380821692600160801b9092041690610183908686610326565b336000908152602081905260409020815481547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166001600160801b0391821690811783559254600160801b90819004821602808417909255908116909117906101f09087908516610568565b10156101fe576101fe61057f565b336000908152602081905260409020546001600160801b03600160801b90910481169061022e9086908416610568565b101561023c5761023c61057f565b505033600090815260208181526040918290208251808401909352546001600160801b038082168452600160801b90910416908201529392505050565b604080518082019091526000808252602082015233600090815260208190526040902080546001600160801b0380821692600160801b90920416906102bf9086866103e1565b336000908152602081905260409020546001600160801b03908116906102e89087908516610528565b10156102f6576102f661057f565b336000908152602081905260409020546001600160801b03600160801b90910481169061022e9086908416610528565b3360009081526020849052604090208215610384576103448361048b565b8154829060009061035f9084906001600160801b0316610540565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505b81156103da576103938261048b565b815482906010906103b5908490600160801b90046001600160801b0316610540565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505b9392505050565b8115610430576103f08261048b565b8354849060009061040b9084906001600160801b03166104fd565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505b80156104865761043f8161048b565b83548490601090610461908490600160801b90046001600160801b03166104fd565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505b505050565b60006001600160801b038211156104a157600080fd5b5090565b6000602082840312156104b757600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146103da57600080fd5b600080604083850312156104ee57600080fd5b50508035926020909101359150565b60006001600160801b0380831681851680830382111561051f5761051f610595565b01949350505050565b6000821982111561053b5761053b610595565b500190565b60006001600160801b038381169083168181101561056057610560610595565b039392505050565b60008282101561057a5761057a610595565b500390565b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052601160045260246000fdfea164736f6c6343000806000a";

export class TestMargin__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestMargin> {
    return super.deploy(overrides || {}) as Promise<TestMargin>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestMargin {
    return super.attach(address) as TestMargin;
  }
  connect(signer: Signer): TestMargin__factory {
    return super.connect(signer) as TestMargin__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestMarginInterface {
    return new utils.Interface(_abi) as TestMarginInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestMargin {
    return new Contract(address, _abi, signerOrProvider) as TestMargin;
  }
}
