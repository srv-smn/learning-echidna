/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestGetStableGivenRisky,
  TestGetStableGivenRiskyInterface,
} from "../TestGetStableGivenRisky";

const _abi = [
  {
    inputs: [
      {
        internalType: "int128",
        name: "value",
        type: "int128",
      },
    ],
    name: "InverseOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int128",
        name: "invariantLast",
        type: "int128",
      },
      {
        internalType: "uint256",
        name: "precStable",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveRisky",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "strike",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sigma",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tau",
        type: "uint256",
      },
    ],
    name: "getStableGivenRisky",
    outputs: [
      {
        internalType: "int128",
        name: "reserveStable",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "scaleFactorRisky",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "scaleFactorStable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prec0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "prec1",
        type: "uint256",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strike",
        type: "uint256",
      },
    ],
    name: "step0",
    outputs: [
      {
        internalType: "int128",
        name: "K",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sigma",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tau",
        type: "uint256",
      },
    ],
    name: "step1",
    outputs: [
      {
        internalType: "int128",
        name: "vol",
        type: "int128",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reserveRisky",
        type: "uint256",
      },
    ],
    name: "step2",
    outputs: [
      {
        internalType: "int128",
        name: "reserve",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int128",
        name: "reserve",
        type: "int128",
      },
    ],
    name: "step3",
    outputs: [
      {
        internalType: "int128",
        name: "phi",
        type: "int128",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int128",
        name: "phi",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "vol",
        type: "int128",
      },
    ],
    name: "step4",
    outputs: [
      {
        internalType: "int128",
        name: "input",
        type: "int128",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int128",
        name: "K",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "input",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "invariantLast",
        type: "int128",
      },
    ],
    name: "step5",
    outputs: [
      {
        internalType: "int128",
        name: "reserveStable",
        type: "int128",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reserve",
        type: "uint256",
      },
    ],
    name: "testStep3",
    outputs: [
      {
        internalType: "int128",
        name: "phi",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reserve",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sigma",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tau",
        type: "uint256",
      },
    ],
    name: "testStep4",
    outputs: [
      {
        internalType: "int128",
        name: "input",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reserve",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "strike",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sigma",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tau",
        type: "uint256",
      },
    ],
    name: "testStep5",
    outputs: [
      {
        internalType: "int128",
        name: "reserveStable",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611b9a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806355ebb82511610097578063a2e50a2b11610066578063a2e50a2b14610215578063aaf5eb6814610228578063cb21537414610236578063e5f2cfcb1461024957600080fd5b806355ebb825146101d35780635eded84c146101dc5780637b599b03146101ef5780639b48eda41461020257600080fd5b8063318f8e64116100d3578063318f8e641461018357806334d2d6521461019657806343d76320146101a95780634dd0d056146101bc57600080fd5b806306fdde03146100fa5780631ab06ee5146101425780632bf02fbe1461015d575b600080fd5b604080518082018252601781527f54657374476574537461626c65476976656e5269736b79000000000000000000602082015290516101399190611ab5565b60405180910390f35b61015b610150366004611a35565b600091909155600155565b005b61017061016b36600461195c565b61025c565b604051600f9190910b8152602001610139565b610170610191366004611a83565b610273565b6101706101a43660046119d2565b6102b3565b6101706101b7366004611a1c565b610311565b6101c560015481565b604051908152602001610139565b6101c560005481565b6101706101ea366004611941565b610347565b6101706101fd36600461198f565b61035a565b610170610210366004611a1c565b61038b565b610170610223366004611a57565b61039a565b670de0b6b3a76400006101c5565b610170610244366004611a1c565b6103c4565b610170610257366004611a35565b6103db565b600061026c600f84900b836103e7565b9392505050565b60008061028186858561039a565b90506102a961029282600f0b610424565b6001546102a09088906104c9565b600f0b906104ea565b9695505050505050565b6000806102bf856103c4565b90506000806102ce86866103db565b905060006102db8961038b565b905060006102e882610347565b90506102f4818461025c565b935050505061030482828b61035a565b9998505050505050505050565b600061034161033961032e600054856104c990919063ffffffff16565b600160401b906103e7565b600f0b610529565b92915050565b6000610341610339600160401b846103e7565b60006103838261037a61036f86600f0b610424565b600f88900b906104ea565b600f0b90610600565b949350505050565b600080546103419083906104c9565b6000806103a685610311565b905060006103b485856103db565b90506102a9600f83900b826103e7565b6000610341600154836104c990919063ffffffff16565b600061026c838361063c565b6000600f82810b9084900b0360016001607f1b0319811280159061041b57506f7fffffffffffffffffffffffffffffff8113155b61026c57600080fd5b60008061043e600f84900b68016a09e667f3bcc908610679565b9050600061047c61047161046661045785600f0b6106da565b6753dd02a4f5ee2e46906104ea565b600160401b90610600565b600160401b90610679565b9050600061048a838361070d565b9050600083600f0b12156104a7576104a481600f0b6107d2565b90505b60006102a96104ba600160401b84610600565b678000000000000000906104ea565b6000806104de83670de0b6b3a7640000611b0a565b905061038384826107ed565b6000600f83810b9083900b0260401d60016001607f1b0319811280159061041b57506f7fffffffffffffffffffffffffffffff81131561026c57600080fd5b6000600160401b600f83900b1215806105465750600082600f0b13155b15610587576040517f72cc98e8000000000000000000000000000000000000000000000000000000008152600f83900b600482015260240160405180910390fd5b67f999999999999999600f83900b138015906105af5750670666666666666666600f83900b12155b156105bd5761034182610836565b670666666666666666600f83900b12156105da57610341826108d6565b60006105f26105ed600160401b856103e7565b6108d6565b61026c90611b2c565b919050565b6000600f83810b9083900b0160016001607f1b0319811280159061041b57506f7fffffffffffffffffffffffffffffff81131561026c57600080fd5b60008061065361064b846109a0565b600f0b6109b0565b90506000610660856109d2565b9050610670600f82900b836104ea565b95945050505050565b600081600f0b6000141561068c57600080fd5b600082600f0b604085600f0b901b816106a7576106a7611b77565b05905060016001607f1b0319811280159061041b57506f7fffffffffffffffffffffffffffffff81131561026c57600080fd5b6000600f82900b60016001607f1b031914156106f557600080fd5b600082600f0b126107065781610341565b5060000390565b60008061076a61075f61074f610744610733600f88900b68010fb844255a12d72e6104ea565b68017401c57014c38f131990610600565b600f87900b906104ea565b68016a09e667f3bcc90890610600565b600f85900b906104ea565b905060006107966107876107446748d4c730f051a5fd1985610600565b67413c831bb169f87490610600565b905060006102a961032e61036f6107c76107bf6107b7600f8c900b8c6104ea565b600f0b6107d2565b600f0b6109e0565b600f86900b906104ea565b6000600f82900b60016001607f1b0319141561070657600080fd5b6000816107f957600080fd5b60006108058484610a3a565b90506f7fffffffffffffffffffffffffffffff6fffffffffffffffffffffffffffffffff8216111561026c57600080fd5b60008061084f600f84900b6780000000000000006103e7565b90506000610861600f83900b836104ea565b9050600061067061075f6108c661089e6721d0a04b0e9b94f161037a61089067c2bf5d74c724e53e19896104ea565b61037a600f8a900b8a6104ea565b6108bd6726a8f3c1f21b336e61037a6787c57e5da70d3c8f19896104ea565b600f0b90610679565b68015d71f5721242c78790610600565b6000806108f861064b6108f0610471600f87900b876104ea565b600f0b610bc8565b9050600061091c6707a1e70f720eca4361037a6801000bf627fa18841019856104ea565b905060006109406810aeac93f55267a9a561037a68041ed34a2561490236866104ea565b9050600061097568072c7d592d021fb1db61037a6109676808c27b4617f5f800ea886104ea565b61037a600f89900b896104ea565b9050600061099561098a600f85900b84610679565b600f86900b90610600565b979650505050505050565b6000610341826301e185586107ed565b60008082600f0b12156109c257600080fd5b610341604083600f0b901b610c02565b6000610341826127106107ed565b60006840000000000000000082600f0b126109fa57600080fd5b683fffffffffffffffff1982600f0b1215610a1757506000919050565b610341608083600f0b700171547652b82fe1777d0ffda0d23a7d1202901d610d7d565b600081610a4657600080fd5b600077ffffffffffffffffffffffffffffffffffffffffffffffff8411610a825782604085901b81610a7a57610a7a611b77565b049050610bab565b60c084811c6401000000008110610a9b576020918201911c5b620100008110610aad576010918201911c5b6101008110610abe576008918201911c5b60108110610ace576004918201911c5b60048110610ade576002918201911c5b60028110610aed576001820191505b60bf820360018603901c6001018260ff0387901b81610b0e57610b0e611b77565b0492506fffffffffffffffffffffffffffffffff831115610b2e57600080fd5b608085901c83026fffffffffffffffffffffffffffffffff8616840260c088901c604089901b82811015610b63576001820391505b608084901b92900382811015610b7a576001820391505b829003608084901c8214610b9057610b90611b61565b888181610b9f57610b9f611b77565b04870196505050505050505b6fffffffffffffffffffffffffffffffff81111561026c57600080fd5b60008082600f0b13610bd957600080fd5b6080610be483611850565b600f0b6fb17217f7d1cf79abc9e3b39803f2f6af02901c9050919050565b600081610c1157506000919050565b8160017001000000000000000000000000000000008210610c375760809190911c9060401b5b600160401b8210610c4d5760409190911c9060201b5b6401000000008210610c645760209190911c9060101b5b620100008210610c795760109190911c9060081b5b6101008210610c8d5760089190911c9060041b5b60108210610ca05760049190911c9060021b5b60088210610cac5760011b5b6001818581610cbd57610cbd611b77565b048201901c90506001818581610cd557610cd5611b77565b048201901c90506001818581610ced57610ced611b77565b048201901c90506001818581610d0557610d05611b77565b048201901c90506001818581610d1d57610d1d611b77565b048201901c90506001818581610d3557610d35611b77565b048201901c90506001818581610d4d57610d4d611b77565b048201901c90506000818581610d6557610d65611b77565b049050808210610d755780610670565b509392505050565b60006840000000000000000082600f0b12610d9757600080fd5b683fffffffffffffffff1982600f0b1215610db457506000919050565b6f8000000000000000000000000000000060006780000000000000008416600f0b1315610df25770016a09e667f3bcc908b2fb1366ea957d3e0260801c5b60008367400000000000000016600f0b1315610e1f577001306fe0a31b7152de8d5a46305c85edec0260801c5b60008367200000000000000016600f0b1315610e4c577001172b83c7d517adcdf7c8c50eb14a791f0260801c5b60008367100000000000000016600f0b1315610e795770010b5586cf9890f6298b92b71842a983630260801c5b60008367080000000000000016600f0b1315610ea6577001059b0d31585743ae7c548eb68ca417fd0260801c5b60008367040000000000000016600f0b1315610ed357700102c9a3e778060ee6f7caca4f7a29bde80260801c5b60008367020000000000000016600f0b1315610f005770010163da9fb33356d84a66ae336dcdfa3f0260801c5b60008367010000000000000016600f0b1315610f2d57700100b1afa5abcbed6129ab13ec11dc95430260801c5b600083668000000000000016600f0b1315610f595770010058c86da1c09ea1ff19d294cf2f679b0260801c5b600083664000000000000016600f0b1315610f85577001002c605e2e8cec506d21bfc89a23a00f0260801c5b600083662000000000000016600f0b1315610fb157700100162f3904051fa128bca9c55c31e5df0260801c5b600083661000000000000016600f0b1315610fdd577001000b175effdc76ba38e31671ca9397250260801c5b600083660800000000000016600f0b131561100957700100058ba01fb9f96d6cacd4b180917c3d0260801c5b600083660400000000000016600f0b13156110355770010002c5cc37da9491d0985c348c68e7b30260801c5b600083660200000000000016600f0b1315611061577001000162e525ee054754457d59952920260260801c5b600083660100000000000016600f0b131561108d5770010000b17255775c040618bf4a4ade83fc0260801c5b6000836580000000000016600f0b13156110b8577001000058b91b5bc9ae2eed81e9b7d4cfab0260801c5b6000836540000000000016600f0b13156110e357700100002c5c89d5ec6ca4d7c8acc017b7c90260801c5b6000836520000000000016600f0b131561110e5770010000162e43f4f831060e02d839a9d16d0260801c5b6000836510000000000016600f0b131561113957700100000b1721bcfc99d9f890ea069117630260801c5b6000836508000000000016600f0b13156111645770010000058b90cf1e6d97f9ca14dbcc16280260801c5b6000836504000000000016600f0b131561118f577001000002c5c863b73f016468f6bac5ca2b0260801c5b6000836502000000000016600f0b13156111ba57700100000162e430e5a18f6119e3c02282a50260801c5b6000836501000000000016600f0b13156111e5577001000000b1721835514b86e6d96efd1bfe0260801c5b60008364800000000016600f0b131561120f57700100000058b90c0b48c6be5df846c5b2ef0260801c5b60008364400000000016600f0b13156112395770010000002c5c8601cc6b9e94213c72737a0260801c5b60008364200000000016600f0b1315611263577001000000162e42fff037df38aa2b219f060260801c5b60008364100000000016600f0b131561128d5770010000000b17217fba9c739aa5819f44f90260801c5b60008364080000000016600f0b13156112b7577001000000058b90bfcdee5acd3c1cedc8230260801c5b60008364040000000016600f0b13156112e157700100000002c5c85fe31f35a6a30da1be500260801c5b60008364020000000016600f0b131561130b5770010000000162e42ff0999ce3541b9fffcf0260801c5b60008364010000000016600f0b131561133557700100000000b17217f80f4ef5aadda455540260801c5b600083638000000016600f0b131561135e5770010000000058b90bfbf8479bd5a81b51ad0260801c5b600083634000000016600f0b1315611387577001000000002c5c85fdf84bd62ae30a74cc0260801c5b600083632000000016600f0b13156113b057700100000000162e42fefb2fed257559bdaa0260801c5b600083631000000016600f0b13156113d9577001000000000b17217f7d5a7716bba4a9ae0260801c5b600083630800000016600f0b131561140257700100000000058b90bfbe9ddbac5e109cce0260801c5b600083630400000016600f0b131561142b5770010000000002c5c85fdf4b15de6f17eb0d0260801c5b600083630200000016600f0b1315611454577001000000000162e42fefa494f1478fde050260801c5b600083630100000016600f0b131561147d5770010000000000b17217f7d20cf927c8e94c0260801c5b6000836280000016600f0b13156114a5577001000000000058b90bfbe8f71cb4e4b33d0260801c5b6000836240000016600f0b13156114cd57700100000000002c5c85fdf477b662b269450260801c5b6000836220000016600f0b13156114f55770010000000000162e42fefa3ae53369388c0260801c5b6000836210000016600f0b131561151d57700100000000000b17217f7d1d351a389d400260801c5b6000836208000016600f0b13156115455770010000000000058b90bfbe8e8b2d3d4ede0260801c5b6000836204000016600f0b131561156d577001000000000002c5c85fdf4741bea6e77e0260801c5b6000836202000016600f0b131561159557700100000000000162e42fefa39fe95583c20260801c5b6000836201000016600f0b13156115bd577001000000000000b17217f7d1cfb72b45e10260801c5b60008361800016600f0b13156115e457700100000000000058b90bfbe8e7cc35c3f00260801c5b60008361400016600f0b131561160b5770010000000000002c5c85fdf473e242ea380260801c5b60008361200016600f0b1315611632577001000000000000162e42fefa39f02b772c0260801c5b60008361100016600f0b13156116595770010000000000000b17217f7d1cf7d83c1a0260801c5b60008361080016600f0b1315611680577001000000000000058b90bfbe8e7bdcbe2e0260801c5b60008361040016600f0b13156116a757700100000000000002c5c85fdf473dea871f0260801c5b60008361020016600f0b13156116ce5770010000000000000162e42fefa39ef44d910260801c5b60008361010016600f0b13156116f557700100000000000000b17217f7d1cf79e9490260801c5b600083608016600f0b131561171b5770010000000000000058b90bfbe8e7bce5440260801c5b600083604016600f0b1315611741577001000000000000002c5c85fdf473de6eca0260801c5b600083602016600f0b131561176757700100000000000000162e42fefa39ef366f0260801c5b600083601016600f0b131561178d577001000000000000000b17217f7d1cf79afa0260801c5b600083600816600f0b13156117b357700100000000000000058b90bfbe8e7bcd6d0260801c5b600083600416600f0b13156117d95770010000000000000002c5c85fdf473de6b20260801c5b600083600216600f0b13156117ff577001000000000000000162e42fefa39ef3580260801c5b600083600116600f0b13156118255770010000000000000000b17217f7d1cf79ab0260801c5b600f83810b60401d603f03900b1c6f7fffffffffffffffffffffffffffffff81111561034157600080fd5b60008082600f0b1361186157600080fd5b6000600f83900b600160401b811261187b576040918201911d5b640100000000811261188f576020918201911d5b6201000081126118a1576010918201911d5b61010081126118b2576008918201911d5b601081126118c2576004918201911d5b600481126118d2576002918201911d5b600281126118e1576001820191505b603f19820160401b600f85900b607f8490031b6780000000000000005b60008113156119245790800260ff81901c8281029390930192607f011c9060011d6118fe565b509095945050505050565b8035600f81900b81146105fb57600080fd5b60006020828403121561195357600080fd5b61026c8261192f565b6000806040838503121561196f57600080fd5b6119788361192f565b91506119866020840161192f565b90509250929050565b6000806000606084860312156119a457600080fd5b6119ad8461192f565b92506119bb6020850161192f565b91506119c96040850161192f565b90509250925092565b60008060008060008060c087890312156119eb57600080fd5b6119f48761192f565b9860208801359850604088013597606081013597506080810135965060a00135945092505050565b600060208284031215611a2e57600080fd5b5035919050565b60008060408385031215611a4857600080fd5b50508035926020909101359150565b600080600060608486031215611a6c57600080fd5b505081359360208301359350604090920135919050565b60008060008060808587031215611a9957600080fd5b5050823594602084013594506040840135936060013592509050565b600060208083528351808285015260005b81811015611ae257858101830151858201604001528201611ac6565b81811115611af4576000604083870101525b50601f01601f1916929092016040019392505050565b600082611b2757634e487b7160e01b600052601260045260246000fd5b500490565b600081600f0b60016001607f1b0319811415611b5857634e487b7160e01b600052601160045260246000fd5b60000392915050565b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052601260045260246000fdfea164736f6c6343000806000a";

export class TestGetStableGivenRisky__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestGetStableGivenRisky> {
    return super.deploy(overrides || {}) as Promise<TestGetStableGivenRisky>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestGetStableGivenRisky {
    return super.attach(address) as TestGetStableGivenRisky;
  }
  connect(signer: Signer): TestGetStableGivenRisky__factory {
    return super.connect(signer) as TestGetStableGivenRisky__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestGetStableGivenRiskyInterface {
    return new utils.Interface(_abi) as TestGetStableGivenRiskyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestGetStableGivenRisky {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestGetStableGivenRisky;
  }
}
