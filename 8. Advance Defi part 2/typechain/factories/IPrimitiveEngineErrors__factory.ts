/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IPrimitiveEngineErrors,
  IPrimitiveEngineErrorsInterface,
} from "../IPrimitiveEngineErrors";

const _abi = [
  {
    inputs: [],
    name: "BalanceError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "delRisky",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "delStable",
        type: "uint256",
      },
    ],
    name: "CalibrationError",
    type: "error",
  },
  {
    inputs: [],
    name: "DeltaInError",
    type: "error",
  },
  {
    inputs: [],
    name: "DeltaOutError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "GammaError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int128",
        name: "invariant",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "nextInvariant",
        type: "int128",
      },
    ],
    name: "InvariantError",
    type: "error",
  },
  {
    inputs: [],
    name: "LockedError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "MinLiquidityError",
    type: "error",
  },
  {
    inputs: [],
    name: "PoolDuplicateError",
    type: "error",
  },
  {
    inputs: [],
    name: "PoolExpiredError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expected",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "actual",
        type: "uint256",
      },
    ],
    name: "RiskyBalanceError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "RiskyPerLpError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "SigmaError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expected",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "actual",
        type: "uint256",
      },
    ],
    name: "StableBalanceError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "StrikeError",
    type: "error",
  },
  {
    inputs: [],
    name: "UninitializedError",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroDeltasError",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroLiquidityError",
    type: "error",
  },
];

export class IPrimitiveEngineErrors__factory {
  static readonly abi = _abi;
  static createInterface(): IPrimitiveEngineErrorsInterface {
    return new utils.Interface(_abi) as IPrimitiveEngineErrorsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IPrimitiveEngineErrors {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IPrimitiveEngineErrors;
  }
}
