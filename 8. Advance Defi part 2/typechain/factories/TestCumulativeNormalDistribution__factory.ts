/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestCumulativeNormalDistribution,
  TestCumulativeNormalDistributionInterface,
} from "../TestCumulativeNormalDistribution";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "int128",
        name: "value",
        type: "int128",
      },
    ],
    name: "InverseOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "cdf",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int128",
        name: "z",
        type: "int128",
      },
    ],
    name: "cdfX64",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "icdf",
    outputs: [
      {
        internalType: "int128",
        name: "y",
        type: "int128",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "inverseCDF",
    outputs: [
      {
        internalType: "int128",
        name: "y",
        type: "int128",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "inverseCDFHighTail",
    outputs: [
      {
        internalType: "int128",
        name: "y",
        type: "int128",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "inverseCDFLowTail",
    outputs: [
      {
        internalType: "int128",
        name: "y",
        type: "int128",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "signedCDF",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "signedInverseCDF",
    outputs: [
      {
        internalType: "int128",
        name: "y",
        type: "int128",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061184b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c806399607bd011610076578063a85182451161005b578063a85182451461011c578063aaf5eb681461012f578063fecec36a1461014c57600080fd5b806399607bd0146100f6578063a4c376c11461010957600080fd5b80630a2c68d7146100a857806316255a25146100c857806354fa95b3146100d057806360042c7e146100e3575b600080fd5b6100b061015f565b604051600f9190910b81526020015b60405180910390f35b6100b0610189565b6100b06100de3660046117a2565b61019f565b6100b06100f13660046117a2565b6101d2565b6100b06101043660046117a2565b6101e7565b6100b06101173660046117a2565b61020a565b6100b061012a3660046117a2565b610218565b61013e670de0b6b3a764000081565b6040519081526020016100bf565b6100b061015a36600461177f565b610236565b60008061017567f9999999999999996001610255565b905061018381600f0b610292565b91505090565b6000806101756706666666666666666001610364565b6000806101b483670de0b6b3a76400006103a0565b6101bd906117dd565b90506101cb81600f0b6103e9565b9392505050565b6000806101bd83670de0b6b3a76400006103a0565b6000806101fc83670de0b6b3a76400006103a0565b90506101cb81600f0b610292565b6000806101fc836001610498565b60008061022d83670de0b6b3a76400006103a0565b6101fc906117dd565b6000610241826117dd565b915061024f82600f0b6103e9565b92915050565b6000600f83810b9083900b0160016001607f1b0319811280159061028957506f7fffffffffffffffffffffffffffffff8113155b6101cb57600080fd5b6000600160401b600f83900b1215806102af5750600082600f0b13155b156102f0576040517f72cc98e8000000000000000000000000000000000000000000000000000000008152600f83900b600482015260240160405180910390fd5b67f999999999999999600f83900b138015906103185750670666666666666666600f83900b12155b156103265761024f826104c1565b670666666666666666600f83900b12156103435761024f8261057e565b600061035b610356600160401b85610364565b61057e565b6101cb906117dd565b6000600f82810b9084900b0360016001607f1b0319811280159061028957506f7fffffffffffffffffffffffffffffff8113156101cb57600080fd5b6000816103ac57600080fd5b60006103b88484610650565b90506f7fffffffffffffffffffffffffffffff6fffffffffffffffffffffffffffffffff821611156101cb57600080fd5b600080610403600f84900b68016a09e667f3bcc9086107de565b9050600061044161043661042b61041c85600f0b61083f565b6753dd02a4f5ee2e4690610872565b600160401b90610255565b600160401b906107de565b9050600061044f83836108b1565b9050600083600f0b121561046c5761046981600f0b610981565b90505b600061048e61047f600160401b84610255565b67800000000000000090610872565b9695505050505050565b6000806104ad83670de0b6b3a76400006117bb565b90506104b984826103a0565b949350505050565b6000806104da600f84900b678000000000000000610364565b905060006104ec600f83900b83610872565b9050600061057561056a61055a6105326721d0a04b0e9b94f161052961051b67c2bf5d74c724e53e1989610872565b610529600f8a900b8a610872565b600f0b90610255565b6105516726a8f3c1f21b336e6105296787c57e5da70d3c8f1989610872565b600f0b906107de565b68015d71f5721242c78790610255565b600f85900b90610872565b95945050505050565b6000806105a86105a0610598610436600f87900b87610872565b600f0b61099c565b600f0b6109d6565b905060006105cc6707a1e70f720eca436105296801000bf627fa1884101985610872565b905060006105f06810aeac93f55267a9a561052968041ed34a256149023686610872565b9050600061062568072c7d592d021fb1db6105296106176808c27b4617f5f800ea88610872565b610529600f89900b89610872565b9050600061064561063a600f85900b846107de565b600f86900b90610255565b979650505050505050565b60008161065c57600080fd5b600077ffffffffffffffffffffffffffffffffffffffffffffffff84116106985782604085901b8161069057610690611828565b0490506107c1565b60c084811c64010000000081106106b1576020918201911c5b6201000081106106c3576010918201911c5b61010081106106d4576008918201911c5b601081106106e4576004918201911c5b600481106106f4576002918201911c5b60028110610703576001820191505b60bf820360018603901c6001018260ff0387901b8161072457610724611828565b0492506fffffffffffffffffffffffffffffffff83111561074457600080fd5b608085901c83026fffffffffffffffffffffffffffffffff8616840260c088901c604089901b82811015610779576001820391505b608084901b92900382811015610790576001820391505b829003608084901c82146107a6576107a6611812565b8881816107b5576107b5611828565b04870196505050505050505b6fffffffffffffffffffffffffffffffff8111156101cb57600080fd5b600081600f0b600014156107f157600080fd5b600082600f0b604085600f0b901b8161080c5761080c611828565b05905060016001607f1b0319811280159061028957506f7fffffffffffffffffffffffffffffff8113156101cb57600080fd5b6000600f82900b60016001607f1b0319141561085a57600080fd5b600082600f0b1261086b578161024f565b5060000390565b6000600f83810b9083900b0260401d60016001607f1b0319811280159061028957506f7fffffffffffffffffffffffffffffff8113156101cb57600080fd5b60008061090361056a6108f36108e86108d7600f88900b68010fb844255a12d72e610872565b68017401c57014c38f131990610255565b600f87900b90610872565b68016a09e667f3bcc90890610255565b9050600061092f6109206108e86748d4c730f051a5fd1985610255565b67413c831bb169f87490610255565b9050600061048e61097661096b610960610958610950600f8c900b8c610872565b600f0b610981565b600f0b6109f8565b600f86900b90610872565b600f88900b90610872565b600160401b90610364565b6000600f82900b60016001607f1b0319141561086b57600080fd5b60008082600f0b136109ad57600080fd5b60806109b883610a52565b600f0b6fb17217f7d1cf79abc9e3b39803f2f6af02901c9050919050565b60008082600f0b12156109e857600080fd5b61024f604083600f0b901b610b31565b60006840000000000000000082600f0b12610a1257600080fd5b683fffffffffffffffff1982600f0b1215610a2f57506000919050565b61024f608083600f0b700171547652b82fe1777d0ffda0d23a7d1202901d610cac565b60008082600f0b13610a6357600080fd5b6000600f83900b600160401b8112610a7d576040918201911d5b6401000000008112610a91576020918201911d5b620100008112610aa3576010918201911d5b6101008112610ab4576008918201911d5b60108112610ac4576004918201911d5b60048112610ad4576002918201911d5b60028112610ae3576001820191505b603f19820160401b600f85900b607f8490031b6780000000000000005b6000811315610b265790800260ff81901c8281029390930192607f011c9060011d610b00565b509095945050505050565b600081610b4057506000919050565b8160017001000000000000000000000000000000008210610b665760809190911c9060401b5b600160401b8210610b7c5760409190911c9060201b5b6401000000008210610b935760209190911c9060101b5b620100008210610ba85760109190911c9060081b5b6101008210610bbc5760089190911c9060041b5b60108210610bcf5760049190911c9060021b5b60088210610bdb5760011b5b6001818581610bec57610bec611828565b048201901c90506001818581610c0457610c04611828565b048201901c90506001818581610c1c57610c1c611828565b048201901c90506001818581610c3457610c34611828565b048201901c90506001818581610c4c57610c4c611828565b048201901c90506001818581610c6457610c64611828565b048201901c90506001818581610c7c57610c7c611828565b048201901c90506000818581610c9457610c94611828565b049050808210610ca45780610575565b509392505050565b60006840000000000000000082600f0b12610cc657600080fd5b683fffffffffffffffff1982600f0b1215610ce357506000919050565b6f8000000000000000000000000000000060006780000000000000008416600f0b1315610d215770016a09e667f3bcc908b2fb1366ea957d3e0260801c5b60008367400000000000000016600f0b1315610d4e577001306fe0a31b7152de8d5a46305c85edec0260801c5b60008367200000000000000016600f0b1315610d7b577001172b83c7d517adcdf7c8c50eb14a791f0260801c5b60008367100000000000000016600f0b1315610da85770010b5586cf9890f6298b92b71842a983630260801c5b60008367080000000000000016600f0b1315610dd5577001059b0d31585743ae7c548eb68ca417fd0260801c5b60008367040000000000000016600f0b1315610e0257700102c9a3e778060ee6f7caca4f7a29bde80260801c5b60008367020000000000000016600f0b1315610e2f5770010163da9fb33356d84a66ae336dcdfa3f0260801c5b60008367010000000000000016600f0b1315610e5c57700100b1afa5abcbed6129ab13ec11dc95430260801c5b600083668000000000000016600f0b1315610e885770010058c86da1c09ea1ff19d294cf2f679b0260801c5b600083664000000000000016600f0b1315610eb4577001002c605e2e8cec506d21bfc89a23a00f0260801c5b600083662000000000000016600f0b1315610ee057700100162f3904051fa128bca9c55c31e5df0260801c5b600083661000000000000016600f0b1315610f0c577001000b175effdc76ba38e31671ca9397250260801c5b600083660800000000000016600f0b1315610f3857700100058ba01fb9f96d6cacd4b180917c3d0260801c5b600083660400000000000016600f0b1315610f645770010002c5cc37da9491d0985c348c68e7b30260801c5b600083660200000000000016600f0b1315610f90577001000162e525ee054754457d59952920260260801c5b600083660100000000000016600f0b1315610fbc5770010000b17255775c040618bf4a4ade83fc0260801c5b6000836580000000000016600f0b1315610fe7577001000058b91b5bc9ae2eed81e9b7d4cfab0260801c5b6000836540000000000016600f0b131561101257700100002c5c89d5ec6ca4d7c8acc017b7c90260801c5b6000836520000000000016600f0b131561103d5770010000162e43f4f831060e02d839a9d16d0260801c5b6000836510000000000016600f0b131561106857700100000b1721bcfc99d9f890ea069117630260801c5b6000836508000000000016600f0b13156110935770010000058b90cf1e6d97f9ca14dbcc16280260801c5b6000836504000000000016600f0b13156110be577001000002c5c863b73f016468f6bac5ca2b0260801c5b6000836502000000000016600f0b13156110e957700100000162e430e5a18f6119e3c02282a50260801c5b6000836501000000000016600f0b1315611114577001000000b1721835514b86e6d96efd1bfe0260801c5b60008364800000000016600f0b131561113e57700100000058b90c0b48c6be5df846c5b2ef0260801c5b60008364400000000016600f0b13156111685770010000002c5c8601cc6b9e94213c72737a0260801c5b60008364200000000016600f0b1315611192577001000000162e42fff037df38aa2b219f060260801c5b60008364100000000016600f0b13156111bc5770010000000b17217fba9c739aa5819f44f90260801c5b60008364080000000016600f0b13156111e6577001000000058b90bfcdee5acd3c1cedc8230260801c5b60008364040000000016600f0b131561121057700100000002c5c85fe31f35a6a30da1be500260801c5b60008364020000000016600f0b131561123a5770010000000162e42ff0999ce3541b9fffcf0260801c5b60008364010000000016600f0b131561126457700100000000b17217f80f4ef5aadda455540260801c5b600083638000000016600f0b131561128d5770010000000058b90bfbf8479bd5a81b51ad0260801c5b600083634000000016600f0b13156112b6577001000000002c5c85fdf84bd62ae30a74cc0260801c5b600083632000000016600f0b13156112df57700100000000162e42fefb2fed257559bdaa0260801c5b600083631000000016600f0b1315611308577001000000000b17217f7d5a7716bba4a9ae0260801c5b600083630800000016600f0b131561133157700100000000058b90bfbe9ddbac5e109cce0260801c5b600083630400000016600f0b131561135a5770010000000002c5c85fdf4b15de6f17eb0d0260801c5b600083630200000016600f0b1315611383577001000000000162e42fefa494f1478fde050260801c5b600083630100000016600f0b13156113ac5770010000000000b17217f7d20cf927c8e94c0260801c5b6000836280000016600f0b13156113d4577001000000000058b90bfbe8f71cb4e4b33d0260801c5b6000836240000016600f0b13156113fc57700100000000002c5c85fdf477b662b269450260801c5b6000836220000016600f0b13156114245770010000000000162e42fefa3ae53369388c0260801c5b6000836210000016600f0b131561144c57700100000000000b17217f7d1d351a389d400260801c5b6000836208000016600f0b13156114745770010000000000058b90bfbe8e8b2d3d4ede0260801c5b6000836204000016600f0b131561149c577001000000000002c5c85fdf4741bea6e77e0260801c5b6000836202000016600f0b13156114c457700100000000000162e42fefa39fe95583c20260801c5b6000836201000016600f0b13156114ec577001000000000000b17217f7d1cfb72b45e10260801c5b60008361800016600f0b131561151357700100000000000058b90bfbe8e7cc35c3f00260801c5b60008361400016600f0b131561153a5770010000000000002c5c85fdf473e242ea380260801c5b60008361200016600f0b1315611561577001000000000000162e42fefa39f02b772c0260801c5b60008361100016600f0b13156115885770010000000000000b17217f7d1cf7d83c1a0260801c5b60008361080016600f0b13156115af577001000000000000058b90bfbe8e7bdcbe2e0260801c5b60008361040016600f0b13156115d657700100000000000002c5c85fdf473dea871f0260801c5b60008361020016600f0b13156115fd5770010000000000000162e42fefa39ef44d910260801c5b60008361010016600f0b131561162457700100000000000000b17217f7d1cf79e9490260801c5b600083608016600f0b131561164a5770010000000000000058b90bfbe8e7bce5440260801c5b600083604016600f0b1315611670577001000000000000002c5c85fdf473de6eca0260801c5b600083602016600f0b131561169657700100000000000000162e42fefa39ef366f0260801c5b600083601016600f0b13156116bc577001000000000000000b17217f7d1cf79afa0260801c5b600083600816600f0b13156116e257700100000000000000058b90bfbe8e7bcd6d0260801c5b600083600416600f0b13156117085770010000000000000002c5c85fdf473de6b20260801c5b600083600216600f0b131561172e577001000000000000000162e42fefa39ef3580260801c5b600083600116600f0b13156117545770010000000000000000b17217f7d1cf79ab0260801c5b600f83810b60401d603f03900b1c6f7fffffffffffffffffffffffffffffff81111561024f57600080fd5b60006020828403121561179157600080fd5b813580600f0b81146101cb57600080fd5b6000602082840312156117b457600080fd5b5035919050565b6000826117d857634e487b7160e01b600052601260045260246000fd5b500490565b600081600f0b60016001607f1b031981141561180957634e487b7160e01b600052601160045260246000fd5b60000392915050565b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052601260045260246000fdfea164736f6c6343000806000a";

export class TestCumulativeNormalDistribution__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestCumulativeNormalDistribution> {
    return super.deploy(
      overrides || {}
    ) as Promise<TestCumulativeNormalDistribution>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestCumulativeNormalDistribution {
    return super.attach(address) as TestCumulativeNormalDistribution;
  }
  connect(signer: Signer): TestCumulativeNormalDistribution__factory {
    return super.connect(signer) as TestCumulativeNormalDistribution__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestCumulativeNormalDistributionInterface {
    return new utils.Interface(
      _abi
    ) as TestCumulativeNormalDistributionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestCumulativeNormalDistribution {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestCumulativeNormalDistribution;
  }
}
