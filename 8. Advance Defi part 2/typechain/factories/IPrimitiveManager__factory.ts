/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IPrimitiveManager,
  IPrimitiveManagerInterface,
} from "../IPrimitiveManager";

const _abi = [
  {
    inputs: [],
    name: "MinLiquidityOutError",
    type: "error",
  },
  {
    inputs: [],
    name: "MinRemoveOutError",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroLiquidityError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "engine",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "delLiquidity",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "delRisky",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "delStable",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "fromMargin",
        type: "bool",
      },
    ],
    name: "Allocate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "engine",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "strike",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "sigma",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "maturity",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "gamma",
        type: "uint32",
      },
    ],
    name: "Create",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "engine",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "delLiquidity",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "delRisky",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "delStable",
        type: "uint256",
      },
    ],
    name: "Remove",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "risky",
        type: "address",
      },
      {
        internalType: "address",
        name: "stable",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "delRisky",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "delStable",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "fromMargin",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "minLiquidityOut",
        type: "uint256",
      },
    ],
    name: "allocate",
    outputs: [
      {
        internalType: "uint256",
        name: "delLiquidity",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "delRisky",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "delStable",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "allocateCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "risky",
        type: "address",
      },
      {
        internalType: "address",
        name: "stable",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "strike",
        type: "uint128",
      },
      {
        internalType: "uint32",
        name: "sigma",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "maturity",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "gamma",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "riskyPerLp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "delLiquidity",
        type: "uint256",
      },
    ],
    name: "create",
    outputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "delRisky",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "delStable",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "delRisky",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "delStable",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "createCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "delLiquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minRiskyOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minStableOut",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [
      {
        internalType: "uint256",
        name: "delRisky",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "delStable",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IPrimitiveManager__factory {
  static readonly abi = _abi;
  static createInterface(): IPrimitiveManagerInterface {
    return new utils.Interface(_abi) as IPrimitiveManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IPrimitiveManager {
    return new Contract(address, _abi, signerOrProvider) as IPrimitiveManager;
  }
}
