/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CumulativeNormalDistribution,
  CumulativeNormalDistributionInterface,
} from "../CumulativeNormalDistribution";

const _abi = [
  {
    inputs: [
      {
        internalType: "int128",
        name: "value",
        type: "int128",
      },
    ],
    name: "InverseOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "C0",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "C0_D",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "C1",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "C1_D",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "C2",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "C2_D",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "C3",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CDF0",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CDF1",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CDF2",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CDF3",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CDF4",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CDF5",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "D0",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "D1",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "HALF_INT",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "HIGH_TAIL",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INVERSE0",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INVERSE1",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INVERSE2",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INVERSE3",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INVERSE4",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOW_TAIL",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ONE_INT",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TWO_INT",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x61036261003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106101ad5760003560e01c80638f02fac9116100f8578063c6ca550c116100a1578063cdb591911161007b578063cdb5919114610315578063edc829ab14610325578063f738c74e14610335578063f8674ddd1461034557600080fd5b8063c6ca550c146102e4578063c8daa924146102f4578063ccb4d4801461030457600080fd5b8063b1f891e9116100d2578063b1f891e9146102b6578063ba98ba84146102c5578063bd2aedb3146102d457600080fd5b80638f02fac914610287578063ac0c039f14610297578063ac5718fb146102a657600080fd5b8063560140631161015a5780636934cdbe116101345780636934cdbe1461025657806373ee9cd7146102665780638b30ff831461027757600080fd5b806356014063146102285780635f839f83146102385780635ffcb26b1461024757600080fd5b80631fc2044c1161018b5780631fc2044c146101f957806347deec2d1461020a5780634900b4171461021957600080fd5b80630f354d16146101b25780631a21ab46146101da5780631f3ca392146101e9575b600080fd5b6101c36802cb2447d36d513dad1981565b604051600f9190910b815260200160405180910390f35b6101c367800000000000000081565b6101c36810e56d75ce8bce9fae81565b6101c36808bb4226952bd69ede1981565b6101c36753dd02a4f5ee2e4681565b6101c367f99999999999999981565b6101c367c2bf5d74c724e53e1981565b6101c36721d0a04b0e9b94f181565b6101c36726a8f3c1f21b336e81565b6101c368015d71f5721242c78781565b6101c36801000bf627fa1884101981565b6101c368016a09e667f3bcc90881565b6101c36802000000000000000081565b6101c367066666666666666681565b6101c36748d4c730f051a5fd1981565b6101c367413c831bb169f87481565b6101c36707a1e70f720eca4381565b6101c36801000000000000000081565b6101c36808c27b4617f5f800ea81565b6101c36810aeac93f55267a9a581565b6101c368017401c57014c38f131981565b6101c36787c57e5da70d3c8f1981565b6101c368010fb844255a12d72e81565b6101c368072c7d592d021fb1db81565b6101c368041ed34a25614902368156fea164736f6c6343000806000a";

export class CumulativeNormalDistribution__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CumulativeNormalDistribution> {
    return super.deploy(
      overrides || {}
    ) as Promise<CumulativeNormalDistribution>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CumulativeNormalDistribution {
    return super.attach(address) as CumulativeNormalDistribution;
  }
  connect(signer: Signer): CumulativeNormalDistribution__factory {
    return super.connect(signer) as CumulativeNormalDistribution__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CumulativeNormalDistributionInterface {
    return new utils.Interface(_abi) as CumulativeNormalDistributionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CumulativeNormalDistribution {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CumulativeNormalDistribution;
  }
}
