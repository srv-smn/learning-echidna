/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestCalcInvariant,
  TestCalcInvariantInterface,
} from "../TestCalcInvariant";

const _abi = [
  {
    inputs: [
      {
        internalType: "int128",
        name: "value",
        type: "int128",
      },
    ],
    name: "InverseOutOfBounds",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reserveRisky",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveStable",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "strike",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sigma",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tau",
        type: "uint256",
      },
    ],
    name: "calcInvariantRisky",
    outputs: [
      {
        internalType: "int128",
        name: "invariant",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reserveRisky",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveStable",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "strike",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sigma",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tau",
        type: "uint256",
      },
    ],
    name: "calcInvariantStable",
    outputs: [
      {
        internalType: "int128",
        name: "invariant",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "scaleFactorRisky",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "scaleFactorStable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prec0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "prec1",
        type: "uint256",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reserveRisky",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "strike",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sigma",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tau",
        type: "uint256",
      },
    ],
    name: "step0",
    outputs: [
      {
        internalType: "int128",
        name: "reserve2",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reserveStable",
        type: "uint256",
      },
      {
        internalType: "int128",
        name: "reserve2",
        type: "int128",
      },
    ],
    name: "step1",
    outputs: [
      {
        internalType: "int128",
        name: "invariant",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506119be806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80639473e3ff1161005b5780639473e3ff146100c2578063aa8aa155146100e8578063ce0aca5e146100e8578063cf9e0931146100fb57600080fd5b80631ab06ee5146100825780634dd0d0561461009d57806355ebb825146100b9575b600080fd5b61009b61009036600461189f565b600091909155600155565b005b6100a660015481565b6040519081526020015b60405180910390f35b6100a660005481565b6100d56100d03660046118c1565b61010e565b604051600f9190910b81526020016100b0565b6100d56100f63660046118f3565b610138565b6100d5610109366004611869565b61015e565b600061012f600154610129600080546001548a8a8a8a610189565b90610262565b95945050505050565b6000806101478786868661010e565b9050610153868261015e565b979650505050505050565b6000610182826101796001548661026290919063ffffffff16565b600f0b9061028b565b9392505050565b6000806101968588610262565b905060006101a4878a610262565b905060006101b6600160401b8361028b565b905084156102325760006101ca87876102d1565b905060006101da83600f0b610305565b905060006101ec600f83900b8461028b565b905060006102178f61020e61020385600f0b6103d7565b600f8b900b90610486565b600f0b906104c5565b9050610227600f82900b8e610501565b975050505050610254565b610251896102488d61020e600f88900b86610486565b600f0b90610501565b93505b505050979650505050505050565b60008061027783670de0b6b3a764000061192e565b90506102838482610526565b949350505050565b6000600f82810b9084900b0360016001607f1b031981128015906102bf57506f7fffffffffffffffffffffffffffffff8113155b6102c857600080fd5b90505b92915050565b6000806102e86102e08461056f565b600f0b61057f565b905060006102f5856105a1565b905061012f600f82900b83610486565b6000600160401b600f83900b1215806103225750600082600f0b13155b15610363576040517f72cc98e8000000000000000000000000000000000000000000000000000000008152600f83900b600482015260240160405180910390fd5b67f999999999999999600f83900b1380159061038b5750670666666666666666600f83900b12155b15610399576102cb826105af565b670666666666666666600f83900b12156103b6576102cb8261065a565b60006103ce6103c9600160401b8561028b565b61065a565b61018290611950565b6000806103f1600f84900b68016a09e667f3bcc908610719565b9050600061042f61042461041961040a85600f0b61077a565b6753dd02a4f5ee2e4690610486565b600160401b906104c5565b600160401b90610719565b9050600061043d83836107ad565b9050600083600f0b121561045a5761045781600f0b61087d565b90505b600061047c61046d600160401b846104c5565b67800000000000000090610486565b9695505050505050565b6000600f83810b9083900b0260401d60016001607f1b031981128015906102bf57506f7fffffffffffffffffffffffffffffff8113156102c857600080fd5b6000600f83810b9083900b0160016001607f1b031981128015906102bf57506f7fffffffffffffffffffffffffffffff8113156102c857600080fd5b60008061051683670de0b6b3a764000061192e565b9050610283600f85900b82610898565b60008161053257600080fd5b600061053e848461091a565b90506f7fffffffffffffffffffffffffffffff6fffffffffffffffffffffffffffffffff821611156102c857600080fd5b60006102cb826301e18558610526565b60008082600f0b121561059157600080fd5b6102cb604083600f0b901b610aa8565b60006102cb82612710610526565b6000806105c8600f84900b67800000000000000061028b565b905060006105da600f83900b83610486565b9050600061012f61064f61063f6106176721d0a04b0e9b94f161020e61060967c2bf5d74c724e53e1989610486565b61020e600f8a900b8a610486565b6106366726a8f3c1f21b336e61020e6787c57e5da70d3c8f1989610486565b600f0b90610719565b68015d71f5721242c787906104c5565b600f85900b90610486565b60008061067c6102e0610674610424600f87900b87610486565b600f0b610c23565b905060006106a06707a1e70f720eca4361020e6801000bf627fa1884101985610486565b905060006106c46810aeac93f55267a9a561020e68041ed34a256149023686610486565b905060006106f968072c7d592d021fb1db61020e6106eb6808c27b4617f5f800ea88610486565b61020e600f89900b89610486565b9050600061015361070e600f85900b84610719565b600f86900b906104c5565b600081600f0b6000141561072c57600080fd5b600082600f0b604085600f0b901b816107475761074761199b565b05905060016001607f1b031981128015906102bf57506f7fffffffffffffffffffffffffffffff8113156102c857600080fd5b6000600f82900b60016001607f1b0319141561079557600080fd5b600082600f0b126107a657816102cb565b5060000390565b6000806107ff61064f6107ef6107e46107d3600f88900b68010fb844255a12d72e610486565b68017401c57014c38f1319906104c5565b600f87900b90610486565b68016a09e667f3bcc908906104c5565b9050600061082b61081c6107e46748d4c730f051a5fd19856104c5565b67413c831bb169f874906104c5565b9050600061047c61087261086761085c61085461084c600f8c900b8c610486565b600f0b61087d565b600f0b610c5d565b600f86900b90610486565b600f88900b90610486565b600160401b9061028b565b6000600f82900b60016001607f1b031914156107a657600080fd5b6000816108a7575060006102cb565b600083600f0b12156108b857600080fd5b600f83900b6fffffffffffffffffffffffffffffffff8316810260401c90608084901c0277ffffffffffffffffffffffffffffffffffffffffffffffff81111561090157600080fd5b60401b811981111561091257600080fd5b019392505050565b60008161092657600080fd5b600077ffffffffffffffffffffffffffffffffffffffffffffffff84116109625782604085901b8161095a5761095a61199b565b049050610a8b565b60c084811c640100000000811061097b576020918201911c5b62010000811061098d576010918201911c5b610100811061099e576008918201911c5b601081106109ae576004918201911c5b600481106109be576002918201911c5b600281106109cd576001820191505b60bf820360018603901c6001018260ff0387901b816109ee576109ee61199b565b0492506fffffffffffffffffffffffffffffffff831115610a0e57600080fd5b608085901c83026fffffffffffffffffffffffffffffffff8616840260c088901c604089901b82811015610a43576001820391505b608084901b92900382811015610a5a576001820391505b829003608084901c8214610a7057610a70611985565b888181610a7f57610a7f61199b565b04870196505050505050505b6fffffffffffffffffffffffffffffffff8111156102c857600080fd5b600081610ab757506000919050565b8160017001000000000000000000000000000000008210610add5760809190911c9060401b5b600160401b8210610af35760409190911c9060201b5b6401000000008210610b0a5760209190911c9060101b5b620100008210610b1f5760109190911c9060081b5b6101008210610b335760089190911c9060041b5b60108210610b465760049190911c9060021b5b60088210610b525760011b5b6001818581610b6357610b6361199b565b048201901c90506001818581610b7b57610b7b61199b565b048201901c90506001818581610b9357610b9361199b565b048201901c90506001818581610bab57610bab61199b565b048201901c90506001818581610bc357610bc361199b565b048201901c90506001818581610bdb57610bdb61199b565b048201901c90506001818581610bf357610bf361199b565b048201901c90506000818581610c0b57610c0b61199b565b049050808210610c1b578061012f565b509392505050565b60008082600f0b13610c3457600080fd5b6080610c3f83610cb7565b600f0b6fb17217f7d1cf79abc9e3b39803f2f6af02901c9050919050565b60006840000000000000000082600f0b12610c7757600080fd5b683fffffffffffffffff1982600f0b1215610c9457506000919050565b6102cb608083600f0b700171547652b82fe1777d0ffda0d23a7d1202901d610d96565b60008082600f0b13610cc857600080fd5b6000600f83900b600160401b8112610ce2576040918201911d5b6401000000008112610cf6576020918201911d5b620100008112610d08576010918201911d5b6101008112610d19576008918201911d5b60108112610d29576004918201911d5b60048112610d39576002918201911d5b60028112610d48576001820191505b603f19820160401b600f85900b607f8490031b6780000000000000005b6000811315610d8b5790800260ff81901c8281029390930192607f011c9060011d610d65565b509095945050505050565b60006840000000000000000082600f0b12610db057600080fd5b683fffffffffffffffff1982600f0b1215610dcd57506000919050565b6f8000000000000000000000000000000060006780000000000000008416600f0b1315610e0b5770016a09e667f3bcc908b2fb1366ea957d3e0260801c5b60008367400000000000000016600f0b1315610e38577001306fe0a31b7152de8d5a46305c85edec0260801c5b60008367200000000000000016600f0b1315610e65577001172b83c7d517adcdf7c8c50eb14a791f0260801c5b60008367100000000000000016600f0b1315610e925770010b5586cf9890f6298b92b71842a983630260801c5b60008367080000000000000016600f0b1315610ebf577001059b0d31585743ae7c548eb68ca417fd0260801c5b60008367040000000000000016600f0b1315610eec57700102c9a3e778060ee6f7caca4f7a29bde80260801c5b60008367020000000000000016600f0b1315610f195770010163da9fb33356d84a66ae336dcdfa3f0260801c5b60008367010000000000000016600f0b1315610f4657700100b1afa5abcbed6129ab13ec11dc95430260801c5b600083668000000000000016600f0b1315610f725770010058c86da1c09ea1ff19d294cf2f679b0260801c5b600083664000000000000016600f0b1315610f9e577001002c605e2e8cec506d21bfc89a23a00f0260801c5b600083662000000000000016600f0b1315610fca57700100162f3904051fa128bca9c55c31e5df0260801c5b600083661000000000000016600f0b1315610ff6577001000b175effdc76ba38e31671ca9397250260801c5b600083660800000000000016600f0b131561102257700100058ba01fb9f96d6cacd4b180917c3d0260801c5b600083660400000000000016600f0b131561104e5770010002c5cc37da9491d0985c348c68e7b30260801c5b600083660200000000000016600f0b131561107a577001000162e525ee054754457d59952920260260801c5b600083660100000000000016600f0b13156110a65770010000b17255775c040618bf4a4ade83fc0260801c5b6000836580000000000016600f0b13156110d1577001000058b91b5bc9ae2eed81e9b7d4cfab0260801c5b6000836540000000000016600f0b13156110fc57700100002c5c89d5ec6ca4d7c8acc017b7c90260801c5b6000836520000000000016600f0b13156111275770010000162e43f4f831060e02d839a9d16d0260801c5b6000836510000000000016600f0b131561115257700100000b1721bcfc99d9f890ea069117630260801c5b6000836508000000000016600f0b131561117d5770010000058b90cf1e6d97f9ca14dbcc16280260801c5b6000836504000000000016600f0b13156111a8577001000002c5c863b73f016468f6bac5ca2b0260801c5b6000836502000000000016600f0b13156111d357700100000162e430e5a18f6119e3c02282a50260801c5b6000836501000000000016600f0b13156111fe577001000000b1721835514b86e6d96efd1bfe0260801c5b60008364800000000016600f0b131561122857700100000058b90c0b48c6be5df846c5b2ef0260801c5b60008364400000000016600f0b13156112525770010000002c5c8601cc6b9e94213c72737a0260801c5b60008364200000000016600f0b131561127c577001000000162e42fff037df38aa2b219f060260801c5b60008364100000000016600f0b13156112a65770010000000b17217fba9c739aa5819f44f90260801c5b60008364080000000016600f0b13156112d0577001000000058b90bfcdee5acd3c1cedc8230260801c5b60008364040000000016600f0b13156112fa57700100000002c5c85fe31f35a6a30da1be500260801c5b60008364020000000016600f0b13156113245770010000000162e42ff0999ce3541b9fffcf0260801c5b60008364010000000016600f0b131561134e57700100000000b17217f80f4ef5aadda455540260801c5b600083638000000016600f0b13156113775770010000000058b90bfbf8479bd5a81b51ad0260801c5b600083634000000016600f0b13156113a0577001000000002c5c85fdf84bd62ae30a74cc0260801c5b600083632000000016600f0b13156113c957700100000000162e42fefb2fed257559bdaa0260801c5b600083631000000016600f0b13156113f2577001000000000b17217f7d5a7716bba4a9ae0260801c5b600083630800000016600f0b131561141b57700100000000058b90bfbe9ddbac5e109cce0260801c5b600083630400000016600f0b13156114445770010000000002c5c85fdf4b15de6f17eb0d0260801c5b600083630200000016600f0b131561146d577001000000000162e42fefa494f1478fde050260801c5b600083630100000016600f0b13156114965770010000000000b17217f7d20cf927c8e94c0260801c5b6000836280000016600f0b13156114be577001000000000058b90bfbe8f71cb4e4b33d0260801c5b6000836240000016600f0b13156114e657700100000000002c5c85fdf477b662b269450260801c5b6000836220000016600f0b131561150e5770010000000000162e42fefa3ae53369388c0260801c5b6000836210000016600f0b131561153657700100000000000b17217f7d1d351a389d400260801c5b6000836208000016600f0b131561155e5770010000000000058b90bfbe8e8b2d3d4ede0260801c5b6000836204000016600f0b1315611586577001000000000002c5c85fdf4741bea6e77e0260801c5b6000836202000016600f0b13156115ae57700100000000000162e42fefa39fe95583c20260801c5b6000836201000016600f0b13156115d6577001000000000000b17217f7d1cfb72b45e10260801c5b60008361800016600f0b13156115fd57700100000000000058b90bfbe8e7cc35c3f00260801c5b60008361400016600f0b13156116245770010000000000002c5c85fdf473e242ea380260801c5b60008361200016600f0b131561164b577001000000000000162e42fefa39f02b772c0260801c5b60008361100016600f0b13156116725770010000000000000b17217f7d1cf7d83c1a0260801c5b60008361080016600f0b1315611699577001000000000000058b90bfbe8e7bdcbe2e0260801c5b60008361040016600f0b13156116c057700100000000000002c5c85fdf473dea871f0260801c5b60008361020016600f0b13156116e75770010000000000000162e42fefa39ef44d910260801c5b60008361010016600f0b131561170e57700100000000000000b17217f7d1cf79e9490260801c5b600083608016600f0b13156117345770010000000000000058b90bfbe8e7bce5440260801c5b600083604016600f0b131561175a577001000000000000002c5c85fdf473de6eca0260801c5b600083602016600f0b131561178057700100000000000000162e42fefa39ef366f0260801c5b600083601016600f0b13156117a6577001000000000000000b17217f7d1cf79afa0260801c5b600083600816600f0b13156117cc57700100000000000000058b90bfbe8e7bcd6d0260801c5b600083600416600f0b13156117f25770010000000000000002c5c85fdf473de6b20260801c5b600083600216600f0b1315611818577001000000000000000162e42fefa39ef3580260801c5b600083600116600f0b131561183e5770010000000000000000b17217f7d1cf79ab0260801c5b600f83810b60401d603f03900b1c6f7fffffffffffffffffffffffffffffff8111156102cb57600080fd5b6000806040838503121561187c57600080fd5b82359150602083013580600f0b811461189457600080fd5b809150509250929050565b600080604083850312156118b257600080fd5b50508035926020909101359150565b600080600080608085870312156118d757600080fd5b5050823594602084013594506040840135936060013592509050565b600080600080600060a0868803121561190b57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b60008261194b57634e487b7160e01b600052601260045260246000fd5b500490565b600081600f0b60016001607f1b031981141561197c57634e487b7160e01b600052601160045260246000fd5b60000392915050565b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052601260045260246000fdfea164736f6c6343000806000a";

export class TestCalcInvariant__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestCalcInvariant> {
    return super.deploy(overrides || {}) as Promise<TestCalcInvariant>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestCalcInvariant {
    return super.attach(address) as TestCalcInvariant;
  }
  connect(signer: Signer): TestCalcInvariant__factory {
    return super.connect(signer) as TestCalcInvariant__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestCalcInvariantInterface {
    return new utils.Interface(_abi) as TestCalcInvariantInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestCalcInvariant {
    return new Contract(address, _abi, signerOrProvider) as TestCalcInvariant;
  }
}
