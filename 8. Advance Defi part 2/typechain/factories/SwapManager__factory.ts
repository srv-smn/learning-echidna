/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { SwapManager, SwapManagerInterface } from "../SwapManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requiredAmount",
        type: "uint256",
      },
    ],
    name: "BalanceTooLowError",
    type: "error",
  },
  {
    inputs: [],
    name: "DeadlineReachedError",
    type: "error",
  },
  {
    inputs: [],
    name: "EngineNotDeployedError",
    type: "error",
  },
  {
    inputs: [],
    name: "LockedError",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEngineError",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyWETHError",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferError",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongConstructorParametersError",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroDelError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "engine",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "risky",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "stable",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "delRisky",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "delStable",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "engine",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "riskyForStable",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deltaIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deltaOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "fromMargin",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "toMargin",
        type: "bool",
      },
    ],
    name: "Swap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "engine",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "risky",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "stable",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "delRisky",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "delStable",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "WETH9",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "risky",
        type: "address",
      },
      {
        internalType: "address",
        name: "stable",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "delRisky",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "delStable",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "delRisky",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "delStable",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "depositCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "margins",
    outputs: [
      {
        internalType: "uint128",
        name: "balanceRisky",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "balanceStable",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "positionDescriptor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "refundETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "risky",
            type: "address",
          },
          {
            internalType: "address",
            name: "stable",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "poolId",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "riskyForStable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "deltaIn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deltaOut",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "fromMargin",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "toMargin",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct ISwapManager.SwapParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "delRisky",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "delStable",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "swapCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "sweepToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "unwrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "engine",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "delRisky",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "delStable",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "wrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

export class SwapManager__factory {
  static readonly abi = _abi;
  static createInterface(): SwapManagerInterface {
    return new utils.Interface(_abi) as SwapManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SwapManager {
    return new Contract(address, _abi, signerOrProvider) as SwapManager;
  }
}
