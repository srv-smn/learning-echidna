/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestReserve, TestReserveInterface } from "../TestReserve";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "_blockTimestamp",
    outputs: [
      {
        internalType: "uint32",
        name: "blockTimestamp",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "timestamp_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveRisky",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveStable",
        type: "uint256",
      },
    ],
    name: "beforeEach",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "res",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "reserveRisky",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "reserveStable",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint32",
            name: "blockTimestamp",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "cumulativeRisky",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cumulativeStable",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cumulativeLiquidity",
            type: "uint256",
          },
        ],
        internalType: "struct Reserve.Data",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reserveId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "reserves",
    outputs: [
      {
        internalType: "uint128",
        name: "reserveRisky",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "reserveStable",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "uint32",
        name: "blockTimestamp",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "cumulativeRisky",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cumulativeStable",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cumulativeLiquidity",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "delRisky",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "delStable",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "delLiquidity",
        type: "uint256",
      },
    ],
    name: "shouldAllocate",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "reserveRisky",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "reserveStable",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint32",
            name: "blockTimestamp",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "cumulativeRisky",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cumulativeStable",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cumulativeLiquidity",
            type: "uint256",
          },
        ],
        internalType: "struct Reserve.Data",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "delRisky",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "delStable",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "delLiquidity",
        type: "uint256",
      },
    ],
    name: "shouldRemove",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "reserveRisky",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "reserveStable",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint32",
            name: "blockTimestamp",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "cumulativeRisky",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cumulativeStable",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cumulativeLiquidity",
            type: "uint256",
          },
        ],
        internalType: "struct Reserve.Data",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resId",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "addXRemoveY",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "deltaIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deltaOut",
        type: "uint256",
      },
    ],
    name: "shouldSwap",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "reserveRisky",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "reserveStable",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint32",
            name: "blockTimestamp",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "cumulativeRisky",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cumulativeStable",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cumulativeLiquidity",
            type: "uint256",
          },
        ],
        internalType: "struct Reserve.Data",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resId",
        type: "bytes32",
      },
    ],
    name: "shouldUpdate",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "reserveRisky",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "reserveStable",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint32",
            name: "blockTimestamp",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "cumulativeRisky",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cumulativeStable",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cumulativeLiquidity",
            type: "uint256",
          },
        ],
        internalType: "struct Reserve.Data",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestep",
        type: "uint256",
      },
    ],
    name: "step",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "timestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "risky",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stable",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "blockTimestamp",
        type: "uint32",
      },
    ],
    name: "update",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "reserveRisky",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "reserveStable",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint32",
            name: "blockTimestamp",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "cumulativeRisky",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cumulativeStable",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cumulativeLiquidity",
            type: "uint256",
          },
        ],
        internalType: "struct Reserve.Data",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610e0e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100d35760003560e01c8063c63aa3e711610081578063ea8d1f0a1161005b578063ea8d1f0a1461033a578063edf6168014610343578063efbb26b31461035657600080fd5b8063c63aa3e7146102fc578063dd7798e714610314578063e9efec021461032757600080fd5b80636f10e285116100b25780636f10e2851461021a5780638f47a687146102d2578063b80777ea146102e557600080fd5b8062bbf1e4146100d85780633a1cde751461018757806368de29331461019c575b600080fd5b6101366100e6366004610b6e565b6002602081905260009182526040909120805460018201549282015460038301546004909301546001600160801b0380841695600160801b948590048216959181169463ffffffff910416929187565b604080516001600160801b0398891681529688166020880152949096169385019390935263ffffffff919091166060840152608083015260a082015260c081019190915260e0015b60405180910390f35b61019a610195366004610b6e565b61044a565b005b6101af6101aa366004610b6e565b610469565b60405161017e9190600060e0820190506001600160801b038084511683528060208501511660208401528060408501511660408401525063ffffffff60608401511660608301526080830151608083015260a083015160a083015260c083015160c083015292915050565b6101af6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c08101919091525060018054600090815260026020818152604092839020835160e08101855281546001600160801b038082168352600160801b91829004811694830194909452958201549283169481019490945293900463ffffffff1660608301528201546080820152600382015460a082015260049091015460c082015290565b6101af6102e0366004610bc9565b610534565b6102ee60005481565b60405190815260200161017e565b60005460405163ffffffff909116815260200161017e565b6101af610322366004610bc9565b61060f565b61019a610335366004610c51565b61066e565b6102ee60015481565b6101af610351366004610b87565b61076d565b6101af610364366004610bfb565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915250600094855260026020818152604096879020918201869055600382018590556004820184905560018201805473ffffffff00000000000000000000000000000000198116600160801b63ffffffff9687168102918217938490558a5160e081018c5295546001600160801b0380821688529082900481169587019590955291841693169290921797830197909752909504166060850152608084019290925260a083015260c082015290565b8063ffffffff166000808282546104619190610d7c565b909155505050565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905290546104bb906000848152600260205260409020906107cc565b50600090815260026020818152604092839020835160e08101855281546001600160801b038082168352600160801b918290048116948301949094526001830154938416958201959095529390910463ffffffff166060840152908101546080830152600381015460a08301526004015460c082015290565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915261059384848461057c60005490565b60008a815260026020526040902093929190610875565b50505060009182525060026020818152604092839020835160e08101855281546001600160801b038082168352600160801b918290048116948301949094526001830154938416958201959095529390910463ffffffff166060840152908101546080830152600381015460a08301526004015460c082015290565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915261059384848461065760005490565b60008a815260026020526040902093929190610967565b6000838155604051610684908690602001610d16565b60408051808303601f190181528282528051602091820120600181815560e0850184526001600160801b039788168552958716828501908152671bc16d674ec8000085850190815263ffffffff998a166060870190815260006080880181815260a0890182815260c08a018381529683526002978890529790912097519351938b16600160801b948c16850217885591519887018054915199909a167fffffffffffffffffffffffff0000000000000000000000000000000000000000909116179790991602959095179095559451938101939093555091516003820155905160049091015550565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c08101919091526105938484846107b560005490565b60008a815260026020526040902093929190610a2e565b60018201546000906107eb90600160801b900463ffffffff1683610dbc565b905063ffffffff81161561087057825460028401805463ffffffff8481166001600160801b038086168202909301909355600387018054600160801b958690048416850201905560018701805460048901805494821690950290930190935573ffffffff00000000000000000000000000000000199091169085169092029190911790555b505050565b61087f85826107cc565b61088884610b54565b855486906000906108a39084906001600160801b0316610d51565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506108d083610b54565b855486906010906108f2908490600160801b90046001600160801b0316610d51565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555061091f82610b54565b60018601805460009061093c9084906001600160801b0316610d51565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505050505050565b61097185826107cc565b61097a84610b54565b855486906000906109959084906001600160801b0316610d94565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506109c283610b54565b855486906010906109e4908490600160801b90046001600160801b0316610d94565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550610a1182610b54565b60018601805460009061093c9084906001600160801b0316610d94565b610a3885826107cc565b8315610ada57610a4783610b54565b85548690600090610a629084906001600160801b0316610d51565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550610a8f82610b54565b85548690601090610ab1908490600160801b90046001600160801b0316610d94565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550610b4d565b610ae382610b54565b85548690600090610afe9084906001600160801b0316610d94565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550610b2b83610b54565b8554869060109061093c908490600160801b90046001600160801b0316610d51565b5050505050565b60006001600160801b03821115610b6a57600080fd5b5090565b600060208284031215610b8057600080fd5b5035919050565b60008060008060808587031215610b9d57600080fd5b8435935060208501358015158114610bb457600080fd5b93969395505050506040820135916060013590565b60008060008060808587031215610bdf57600080fd5b5050823594602084013594506040840135936060013592509050565b600080600080600060a08688031215610c1357600080fd5b85359450602086013593506040860135925060608601359150608086013563ffffffff81168114610c4357600080fd5b809150509295509295909350565b60008060008060808587031215610c6757600080fd5b843567ffffffffffffffff80821115610c7f57600080fd5b818701915087601f830112610c9357600080fd5b813581811115610ca557610ca5610deb565b604051601f8201601f19908116603f01168101908382118183101715610ccd57610ccd610deb565b816040528281528a6020848701011115610ce657600080fd5b82602086016020830137600060209382018401529a91890135995050604088013597606001359650945050505050565b6000825160005b81811015610d375760208186018101518583015201610d1d565b81811115610d46576000828501525b509190910192915050565b60006001600160801b03808316818516808303821115610d7357610d73610dd5565b01949350505050565b60008219821115610d8f57610d8f610dd5565b500190565b60006001600160801b0383811690831681811015610db457610db4610dd5565b039392505050565b600063ffffffff83811690831681811015610db457610db45b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea164736f6c6343000806000a";

export class TestReserve__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestReserve> {
    return super.deploy(overrides || {}) as Promise<TestReserve>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestReserve {
    return super.attach(address) as TestReserve;
  }
  connect(signer: Signer): TestReserve__factory {
    return super.connect(signer) as TestReserve__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestReserveInterface {
    return new utils.Interface(_abi) as TestReserveInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestReserve {
    return new Contract(address, _abi, signerOrProvider) as TestReserve;
  }
}
